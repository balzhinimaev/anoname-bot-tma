name: ci-cd

on:
  push:
    branches: ["master"]

env:
  VPS_APP_DIR: /opt/mvp-anoname-bot

jobs:
  build-and-push:
    runs-on: ubuntu-latest
    permissions:
      contents: read
      packages: write
    steps:
      - name: Checkout
        uses: actions/checkout@v4

      - name: Log in to GHCR
        uses: docker/login-action@v3
        with:
          registry: ghcr.io
          username: ${{ github.actor }}
          password: ${{ secrets.GITHUB_TOKEN }}

      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v3

      - name: Build and push image
        uses: docker/build-push-action@v6
        with:
          context: .
          push: true
          tags: |
            ghcr.io/${{ github.repository_owner }}/anonamebot:latest
            ghcr.io/${{ github.repository_owner }}/anonamebot:${{ github.sha }}
          platforms: linux/amd64

  deploy:
    needs: build-and-push
    runs-on: ubuntu-latest
    permissions:
      contents: read
      packages: read
    steps:
      - name: Install ssh client
        run: sudo apt-get update && sudo apt-get install -y openssh-client

      - name: Add SSH key
        uses: webfactory/ssh-agent@v0.9.0
        with:
          ssh-private-key: ${{ secrets.VPS_SSH_KEY }}

      - name: Create app directory and .env on VPS
        run: |
          ENV_B64=$(printf "BOT_TOKEN=%s\nWEB_APP_URL=%s\nTELEGRAM_WEBHOOK_PATH=%s\nTELEGRAM_WEBHOOK_SECRET=%s\nBOT_WEBHOOK_URL=%s\nAUTO_SET_WEBHOOK=%s\nAPI_BASE_URL=%s\nBOT_BACKEND_SECRET=%s\nAB_SPLIT_A=%s\nPORT=%s\nNODE_ENV=production\n" "${{ secrets.BOT_TOKEN }}" "${{ secrets.WEB_APP_URL }}" "${{ secrets.TELEGRAM_WEBHOOK_PATH }}" "${{ secrets.TELEGRAM_WEBHOOK_SECRET }}" "${{ secrets.BOT_WEBHOOK_URL }}" "${{ secrets.AUTO_SET_WEBHOOK }}" "${{ secrets.API_BASE_URL }}" "${{ secrets.BOT_BACKEND_SECRET }}" "${{ secrets.AB_SPLIT_A }}" "${{ secrets.APP_PORT || '7777' }}" | base64 -w0)
          ssh -o StrictHostKeyChecking=no ${{ secrets.VPS_USER }}@${{ secrets.VPS_HOST }} "sudo mkdir -p ${{ env.VPS_APP_DIR }} && echo $ENV_B64 | base64 -d | sudo tee ${{ env.VPS_APP_DIR }}/.env > /dev/null"

      - name: Log in to GHCR on VPS and run container
        run: |
          APP_PORT="${{ secrets.APP_PORT || '7777' }}"
          ssh -o StrictHostKeyChecking=no ${{ secrets.VPS_USER }}@${{ secrets.VPS_HOST }} \
            "echo ${{ secrets.GITHUB_TOKEN }} | sudo docker login ghcr.io -u ${{ github.actor }} --password-stdin && \
             sudo docker pull ghcr.io/${{ github.repository_owner }}/anonamebot:latest && \
             sudo docker stop anonamebot || true && \
             sudo docker rm -f anonamebot || true && \
             sudo lsof -ti:$APP_PORT | xargs -r sudo kill -9 || true && \
             sudo docker run -d --name anonamebot --restart=always --env-file ${{ env.VPS_APP_DIR }}/.env -p $APP_PORT:$APP_PORT ghcr.io/${{ github.repository_owner }}/anonamebot:latest"

      - name: Health check
        run: |
          echo "Waiting for application to start..."
          sleep 30
          APP_PORT="${{ secrets.APP_PORT || '7777' }}"
          ssh -o StrictHostKeyChecking=no ${{ secrets.VPS_USER }}@${{ secrets.VPS_HOST }} \
            "if curl -f http://localhost:$APP_PORT/healthz; then echo '✅ Health check passed'; else echo '❌ Health check failed'; exit 1; fi"
